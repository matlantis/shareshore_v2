- @title = t('titles.searches.show')

= render 'search_form', search: @search.dup

- if @house_center
  .house
    .row
      .col-xs-12
        #{t('.text_at_house')} #{house_marker(@house_center)}:
        - has_a_location_here = false
        - @house_center.locations.each do |location|
          - if location.user == current_user
            - has_a_location_here = true
          - else
            = user_marker(location.user)
            (#{link_to articles_count(location.articles), articles_location_path(location)})
        - if has_a_location_here
          = t('.and_you')
          %span.glyphicon.glyphicon-heart
          !

.row
  .col-xs-12
    #mapid{:style => "width: -1; height: 400px;"}
  
.row
  .col-xs-12


    %ul.nav.nav-tabs
      %li.active
        = link_to("#tab-articles", data: {toggle: "tab"}, class: "tab") do
          = @articles.count
          = Article.model_name.human(count: @articles.count)
      %li
        = link_to("#tab-locations", data: {toggle: "tab"}, class: "tab") do
          = @locations.count
          = User.model_name.human(count: @locations.count)
    .tab-content
      #tab-articles.tab-pane.fade.in.active
        - if Search.articles_per_page < @articles.count || current_user
          .shareshore-panel
            - if Search.articles_per_page < @articles.count
              = t('.text_x_of_y_articles_are_shown', x: [Search.articles_per_page, @articles.count].min, y: @articles.count)
            - if current_user
              = t('.warning_about_own_articles')
        - if @articles.empty?
          .empty-list
            = t('.empty_articles_list_message')
        - @articles.each do |article|
          - article_div_id = "article_" + article.id.to_s + "_div"
          - home = article.location.house == @house_center
          %div{:class => "article#{" article_house" if home}", "data-article-id" => "#{article.id.to_s}", "data-house-id" => "#{article.location.house_id}", :id => article_div_id}
            .article_view
              = render 'articles/article_view', article: article, edit: false, home: home
        -#= will_paginate @articles, renderer: BootstrapPagination::Rails

      #tab-locations.tab-pane.fade
        - if Search.locations_per_page < @locations.count # || current_user
          .shareshore-panel
            - if Search.locations_per_page < @locations.count
              = t('.text_x_of_y_locations_are_shown', x: [Search.locations_per_page, @locations.count].min, y: @locations.count)
            -# if current_user
              = t('.warning_about_own_locations')
        - if @locations.empty?
          .empty-list
            = t('.empty_locations_list_message')
        - @locations.each do |location|
          - location_div_id = "location_" + location.id.to_s + "_div"
          - home = location.house == @house_center
          .location{"data-house-id" => "#{location.house_id}", :id => location_div_id}
            .location_view
              = render 'locations/location_view', location: location, home: home
        -#= will_paginate @locations, renderer: BootstrapPagination::Rails

= render 'layouts/modal_error'
        
:javascript
  onMapClick = function(e) {
    console.log("You clicked the marker " + e.target.index);
  };
  
  $(document).ready(function() {
    #{render 'articles/map_index.js.erb', articles: @articles, formats: [:js]}
    
    // article hover event handler
    var onArticleMouseEnter = function(e) {
      // search the marker with the correct house index
      for (i = 0; i< markers.length; i++) {
        //if ( markers[i].index == $(this).attr("data-house-id") ) {
        var house_id = $(this).parentsUntil("[data-house-id]").parent().attr("data-house-id")
        if ( markers[i].index == house_id ) {       
          markers[i].openPopup();
          break;
        }
      }
    }

    // article hover event handler
    var onArticleMouseLeave = function(e) {
      // search the marker with the correct house index
      for (i = 0; i< markers.length; i++) {
        var house_id = $(this).parentsUntil("[data-house-id]").parent().attr("data-house-id")
        if ( markers[i].index == house_id ) {
          markers[i].closePopup();
          break;
        }
      }
    }
    
    // bind the event handler
    $(".location_marker").on('mouseenter', onArticleMouseEnter);
    $(".location_marker").on('mouseleave', onArticleMouseLeave);

    // ajax response for user article requests
    $('.new_user_article_request').on('ajax:success', function ()
    {
      // find a parent element
      parent_div = $(this).parentsUntil('.request-panel').parent();
      // hide the form and show the send message
      parent_div.find('.waiting').hide(200)
      parent_div.find('.request-was-send').show(200)
    });

    // ajax response for user article requests
    $('.new_user_article_request').on('ajax:beforeSend', function ()
    {
      // find a parent element
      parent_div = $(this).parentsUntil('.request-panel').parent();
      // hide the form and show the send message
      parent_div.find('.send-request').hide(200)
      parent_div.find('.waiting').show(200)
    });


    // ajax response for user article requests
    $('.new_user_article_request').on('ajax:error', function ()
    {
      // find a parent element
      parent_div = $(this).parentsUntil('.request-panel').parent();
      // hide the form and show the send message
      parent_div.find('.waiting').hide(200)
      parent_div.find('.send-request').show(200)
    });

    // global ajax responses
    $('body').on("ajax:success", function(e, data, status, xhr) {
      console.log("Success");
    });

    $('body').on("ajax:error", function(e, xhr, status, error) {
      console.log("Error");
      $("#modal-error").modal("show");
    });

  });

