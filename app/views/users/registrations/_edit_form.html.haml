-# parameters:
-# - resource

#user_form
  = simple_form_for(resource, remote: true, url: registration_path(resource_name), as: resource_name, html: { method: :put, class: "form-horizontal", id: :error_form}) do |f|
    = devise_error_messages!
    .form-group
      .col-xs-12
        %h4= t(".basic_info")
      .col-xs-12

  = simple_form_for(resource, remote: true, url: registration_path(resource_name), as: resource_name, html: { method: :put, class: "form-horizontal", id: :email_form}) do |f|
    .form-group
      .col-xs-3
        = f.label :email, class: "control-label"
      .col-xs-7.email_field.to-hide
        = f.email_field :email, autofocus: true, class: "form-control"
      .col-xs-7.email_field
        .radio
          = resource.email
      .col-xs-2.email_field.text-right
        = link_to("", "", class: "glyphicon glyphicon-pencil edit-remove mp-toggle-visibility", data: { toggle_target: ".email_field", toggle: "tooltip"}, title: t('button.edit'))
      .col-xs-2.email_field.to-hide.text-right
        = submit_icon
        = link_to("", "", class: "glyphicon glyphicon-remove edit-remove mp-toggle-visibility", data: { toggle_target: ".email_field", toggle: "tooltip"}, title: t('button.cancel'))

  = simple_form_for(resource, remote: true, url: registration_path(resource_name), as: resource_name, html: { method: :put, class: "form-horizontal", id: :nickname_form}) do |f|
    .form-group
      .col-xs-3
        = f.label :nickname, class: "control-label"
      .col-xs-7.nickname_field.to-hide
        = f.text_field :nickname, class: "form-control"
      .col-xs-7.nickname_field
        .radio
          = resource.nickname
      .col-xs-2.nickname_field.text-right
        = link_to("", "", class: "glyphicon glyphicon-pencil edit-remove mp-toggle-visibility", data: { toggle_target: ".nickname_field", toggle: "tooltip"}, title: t('button.edit'))
      .col-xs-2.nickname_field.to-hide.text-right
        = submit_icon
        = link_to("", "", class: "glyphicon glyphicon-remove edit-remove mp-toggle-visibility", data: { toggle_target: ".nickname_field", toggle: "tooltip"}, title: t('button.cancel'))

  = simple_form_for(resource, remote: true, url: registration_path(resource_name), as: resource_name, html: { method: :put, class: "form-horizontal", id: :password_form}) do |f|
    .form-group
      .col-xs-3
        = f.label :password, class: "control-label"
      .col-xs-7.password_field
        .radio
          = t('.hidden_password')
      .col-xs-7.password_field.to-hide
        = f.password_field :password, help: t(".help_password_leave_blank"), autocomplete: "off", class: "form-control"
      .col-xs-2.password_field.text-right
        = link_to("", "", class: "glyphicon glyphicon-pencil edit-remove mp-toggle-visibility", data: { toggle_target: ".password_field", toggle: "tooltip"}, title: t('button.edit'))
      .col-xs-2.password_field.to-hide.text-right
        = submit_icon
        = link_to("", "", class: "glyphicon glyphicon-remove edit-remove mp-toggle-visibility", data: { toggle_target: ".password_field", toggle: "tooltip"}, title: t('button.cancel'))

    .form-group.password_field.to-hide
      .col-xs-3
        = f.label :password_confirmation, class: "control-label"
      .col-xs-7
        = f.password_field :password_confirmation, autocomplete: "off", label: t('.new_password_confirmation_label'), class: "form-control"

    .form-group.password_field.to-hide
      .col-xs-3
        = f.label :current_password, class: "control-label"
      .col-xs-7
        = f.password_field :current_password, help: t(".help_password_needed"), autocomplete: "off", class: "form-control"

  = simple_form_for(resource, remote: true, url: registration_path(resource_name), as: resource_name, html: { method: :put, class: "form-horizontal", id: :location_form}) do |f|
    .form-group
      .col-xs-12
        %h4= t(".location_info")
      .col-xs-10
        = t(".where_are_your_things")
      .col-xs-2.location_field.text-right
        = link_to("", "", class: "glyphicon glyphicon-pencil edit-remove mp-toggle-visibility", data: { toggle_target: ".location_field", toggle: "tooltip"}, title: t('button.edit'))
      .col-xs-2.location_field.to-hide.text-right
        = submit_icon
        = link_to("", "", class: "glyphicon glyphicon-remove edit-remove mp-toggle-visibility", data: { toggle_target: ".location_field", toggle: "tooltip"}, title: t('button.cancel'))

    = f.fields_for :location do |loc_f|
      .form-group
        .col-xs-3
          = loc_f.label :address, class: "control-label"
        .col-xs-9.location_field.to-hide
          = loc_f.text_field :address, class: "form-control"
        .col-xs-9.location_field
          .radio
            = resource.location.address

    .form-group.location_field.to-hide
      #set_location_remark
        .col-xs-6
          = t('.text_location_incorrect')
        .col-xs-6
          = link_to t(".link_set_manually"), "#", id: "set_location_link", class: "btn btn-default"
      #set_location_controls.to-hide
        .col-xs-6
          = t('.text_drag_marker_to_location')
        .col-xs-6
        = link_to t("forms.cancel"), "#", id: "cancel_set_location_link", class: "btn btn-default"
        = link_to t("forms.finish"), "#", id: "finish_set_location_link", class: "btn btn-default"

    .form-group
      .col-xs-12
        .text-right
          = link_to "Click: " + t("layouts.application.toggle_map_tooltip"), class: 'mp-toggle-visibility', data: { toggle_target: "#mapid", toggle: "tooltip" }, title: t('layouts.application.toggle_map_tooltip') do
            %span.glyphicon.glyphicon-eye-open
        #mapid.global{style: "width: 100%; height: 40vh;"}

  = simple_form_for(resource, remote: true, url: registration_path(resource_name), as: resource_name, html: { method: :put, class: "form-horizontal", id: :contact_form}) do |f|
    .form-group
      .col-xs-12
        %h4= t(".contact_info")
      .col-xs-10
        = t(".how_shall_people_get_in_contact_with_you")
      .col-xs-2.contact_field.text-right
        = link_to("", "", class: "glyphicon glyphicon-pencil edit-remove mp-toggle-visibility", data: { toggle_target: ".contact_field", toggle: "tooltip"}, title: t('button.edit'))
      .col-xs-2.contact_field.to-hide.text-right
        = submit_icon
        = link_to("", "", class: "glyphicon glyphicon-remove edit-remove mp-toggle-visibility", data: { toggle_target: ".contact_field", toggle: "tooltip"}, title: t('button.cancel'))

    .form-group
      .col-xs-12
        .checkbox
          %label
            .glyphicon.glyphicon-ok.contact_field.checkbox-icon
            = check_box_tag :pershareship, 'yes', true, disabled: true, class: ["contact_field", "to-hide"]
            = t(".per_shareship")
            .help-block
              = t(".per_shareship_help")
        -#= f.input :showemail
        .checkbox
          %label
            - if resource.showemail
              .glyphicon.glyphicon-ok.contact_field.checkbox-icon
            - else
              .glyphicon.glyphicon-remove.contact_field.checkbox-icon
            = f.check_box :showemail, class: ["contact_field", "to-hide"]
            = t('.per_email')
            .help-block
              = t('.per_email_help')
        .checkbox
          %label
            - if resource.showphone
              .glyphicon.glyphicon-ok.contact_field.checkbox-icon
            - else
              .glyphicon.glyphicon-remove.contact_field.checkbox-icon
            = f.check_box :showphone, class: ["contact_field", "to-hide"]
            = t('.per_phone')
            .help-block
              = t('.per_phone_help')
    .form-group
      .col-xs-3
        = f.label :phoneno, class: "control-label"
      .col-xs-9.contact_field
        .radio
          = resource.phoneno
      .col-xs-9.contact_field.to-hide
        = f.text_field :phoneno, class: 'form-control'


  = simple_form_for(resource, remote: true, url: registration_path(resource_name), as: resource_name, html: { method: :put, class: "form-horizontal", id: :aboutme_form}) do |f|
    .form-group
      .col-xs-12
        %h4= t(".about_info")
      .col-xs-10
        = t(".write_a_few_nice_words")
      .col-xs-2.aboutme_field.text-right
        = link_to("", "", class: "glyphicon glyphicon-pencil edit-remove mp-toggle-visibility", data: { toggle_target: ".aboutme_field", toggle: "tooltip"}, title: t('button.edit'))
      .col-xs-2.aboutme_field.to-hide.text-right
        = submit_icon
        = link_to("", "", class: "glyphicon glyphicon-remove edit-remove mp-toggle-visibility", data: { toggle_target: ".aboutme_field", toggle: "tooltip"}, title: t('button.cancel'))

    .form-group
      .col-xs-12.aboutme_field
        %cite
          = resource.aboutme
      .col-xs-12.aboutme_field.to-hide
        = f.text_area :aboutme, class: 'form-control'

:javascript
  var onMapClick = function(e) {
    console.log("You clicked the map at " + e.latlng.lat + ", " + e.latlng.lng);
  };

  $(document).ready(function() {
    #{render 'articles/map_show.js.erb', houses: [resource.location.house], articles: resource.articles}

     var stopLocationSet = function(e) {
       // disable dragging
       markers[0].dragging.disable();

       // reset controls
       $("#set_location_remark").show();
       $("#set_location_controls").hide();

       console.log("dragging disabled");
     }

     $("#set_location_link").on('click', function(e) {
       e.preventDefault();
       console.log("dragging enabled");

       // show location controls
       $("#set_location_remark").hide();
       $("#set_location_controls").show();

       // enable dragging
       markers[0].dragging.enable();
     });

     $("#cancel_set_location_link").on('click', function(e) {
       e.preventDefault();
       // reset the marker to its initial position
       markers[0].setLatLng(#{"[#{resource.location.latitude}, #{resource.location.longitude} ]"});
       stopLocationSet();
     });

     $("#finish_set_location_link").on('click', function(e) {
       e.preventDefault();
       console.log("Set location at " + markers[0].getLatLng().lat + ", " + markers[0].getLatLng().lng);

       // inform the server
       $.ajax({
         url: "#{escape_javascript(location_path(resource.location))}",
         data: {
           location: {
             latitude: markers[0].getLatLng().lat,
             longitude: markers[0].getLatLng().lng
           }
         },
         dataType: 'json',
         type: 'PUT',
         error: function(data, status) {
           console.log("Error");
           $("#modal-error").modal("show");
         },
         success: function(data, status) {
           console.log("Success");
         }
       });
       // recenter map
       map.setView(markers[0].getLatLng(), defaultZoom);

       $(".location_field").toggle();

       stopLocationSet();
     });
  });
