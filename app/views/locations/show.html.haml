- @title = @location.shortaddress
- @with_map = true

-#.col-xs-12.col-sm-3.col-sm-push-9
  = tipp_panel do
    = t('.tip_panel_text')

-#.col-xs-12.col-sm-9.col-sm-pull-3
.col-xs-12.col-sm-6
  .row
    .col-xs-6.text-right
      %strong
        = Location.human_attribute_name("user").concat(":")
    .col-xs-6
      = user_marker(@location.user)
  .row
    .col-xs-6.text-right
      %strong
        = Location.human_attribute_name("street").concat(":")
    .col-xs-6
      = @location.street
      = @location.number
  .row
    .col-xs-6.text-right
      %strong
        = Location.human_attribute_name("postcode").concat(":")
    .col-xs-6
      = @location.postcode
  .row
    .col-xs-6.text-right
      %strong
        = Location.human_attribute_name("city").concat(":")
    .col-xs-6
      = @location.city
  .row
    .col-xs-6.text-right
      %strong
        = Location.human_attribute_name("country").concat(":")
    .col-xs-6
      = @location.country_name
  -#.row
    .col-xs-3.text-right
      %strong
        = articles_location_count_link(@location).concat(":")
    .col-xs-9
      = @location.articles.map {|article| article_marker article }.join(", ").html_safe
  - if @location.house.locations.count > 1
    .row
      .col-xs-12
        .house
          = t('.text_there_are_x_users_in_this', count: @location.house.locations.count-1)
          = link_to @location.house do
            %span.glyphicon.glyphicon-home
            = House.model_name.human
            
- if current_user == @location.user
  .col-xs-12.col-sm-6.text-center.shareshore-panel
    #set_location_remark
      %p
        = t('.text_location_incorrect')
      %p
        = link_to t(".link_set_manually"), "#", id: "set_location_link", class: "btn btn-default"
    #set_location_controls
      %div
        = t('.text_drag_marker_to_location')
      = link_to t("forms.cancel"), "#", id: "cancel_set_location_link", class: "btn btn-default"
      = link_to t("forms.finish"), "#", id: "finish_set_location_link", class: "btn btn-default"

.row
  .col-xs-12
    - if @articles.empty?
      .empty-list
        = t('.empty_list_message')
    - @articles.each do |article|
      - article_div_id = "article_" + article.id.to_s + "_div"
      .article{:id => article_div_id}
        .article_view
          = render 'articles/article_view', article: article, edit: false, home: false

:javascript
  $(document).ready(function() {
     
     var stopLocationSet = function(e) {
       // disable dragging
       markers[0].dragging.disable(); 
       
       // reset controls
       $("#set_location_remark").show();
       $("#set_location_controls").hide();
  
       console.log("dragging disabled");
     }
  
     var onMapClick = function(e) {
       console.log("You clicked the map at " + e.latlng.lat + ", " + e.latlng.lng);
     };
  
     #{render 'articles/map_show.js.erb', house: @location.house, formats: [:js]}
  
     $("#set_location_controls").hide();
     
     $("#set_location_link").on('click', function(e) {
       e.preventDefault();
       console.log("dragging enabled");
  
       // show location controls
       $("#set_location_remark").hide();
       $("#set_location_controls").show();
  
       // enable dragging
       markers[0].dragging.enable();
     });
  
     $("#cancel_set_location_link").on('click', function(e) {
       e.preventDefault();
       // reset the marker to its initial position
       markers[0].setLatLng(#{"[#{@location.latitude}, #{@location.longitude} ]"});
       stopLocationSet();
     });
  
     $("#finish_set_location_link").on('click', function(e) {
       e.preventDefault();
       console.log("Set location at " + markers[0].getLatLng().lat + ", " + markers[0].getLatLng().lng);
       
       // inform the server
       $.ajax({
         url: "#{escape_javascript(location_path(@location))}",
         data: {
           location: {
             latitude: markers[0].getLatLng().lat,
             longitude: markers[0].getLatLng().lng
           }
         },
         dataType: 'json',
         type: 'PUT',
         error: function(data, status) {
           console.log("Error");
           $("#modal-error").modal("show");
         },
         success: function(data, status) {
           console.log("Success");
           location.reload(false);
         }
       });
       // recenter map
       map.setView(markers[0].getLatLng(), defaultZoom);
       
       stopLocationSet();
     });
  });
