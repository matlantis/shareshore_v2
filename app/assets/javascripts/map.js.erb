var defaultZoom = 17;

drawmap_leaflet = function(mapid, marker_defs, bounds, onMapClick, onMapDblClick, zoom) {
  // parameter defaults
  onMapClick = onMapClick || null;
  onMapDblClick = onMapDblClick || null;
  zoom = zoom || defaultZoom;
    
  var map = L.map(mapid);
  if ( bounds.length == 1 )
    map.setView(bounds[0], zoom);
  else
    map.fitBounds(bounds);

  // create the tile layer with correct attribution
  var osmUrl='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
  var osmAttrib='Map data Â© <a href="http://openstreetmap.org">OpenStreetMap</a> contributors';
  var osm = new L.TileLayer(osmUrl, { attribution: osmAttrib} );
  osm.addTo(map);

  // add markers and popups
  var icon_red = L.icon({iconUrl: '<%= asset_path "marker-icon-red.png" %>', iconAnchor: [12, 39]})
  var icon_blue = L.icon({iconUrl: '<%= asset_path "marker-icon-blue.png" %>', iconAnchor: [12, 39]})

  // add scale
  L.control.scale().addTo(map);
  
  var markers = [];
  for (i=0; i<marker_defs.length; i++) {
    var icon;
    if ( marker_defs[i].color == 'red' ) { icon = icon_red; }
    else { icon = icon_blue; } //( marker_defs[i].color == 'blue' )
    var marker = L.marker(marker_defs[i].coords, { icon: icon }).addTo(map);
    marker.bindPopup(marker_defs[i].html);
    marker.index = marker_defs[i].id;
    markers.push(marker);
    //marker.on('click', onMarkerClick);
    
  }
  
  // events
  if ( onMapClick ) {
    map.on('click', onMapClick);
  }
  
  if ( onMapDblClick ) {
    map.on('dblclick', onMapDblClick)
  }
  return [map, markers];
}
