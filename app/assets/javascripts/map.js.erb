$(document).ready(function() {
  // article hover event handler
  var onArticleMouseEnter = function(e) {
    // search the marker with the correct house index
    for (i = 0; i< window.markers.length; i++) {
      //if ( window.markers[i].index == $(this).attr("data-house-id") ) {
      var house_id = $(this).parentsUntil("[data-house-id]").parent().attr("data-house-id")
      if ( window.markers[i].index == house_id ) {       
        window.markers[i].openPopup();
        break;
      }
    }
  }

  // article hover event handler
  var onArticleMouseLeave = function(e) {
    // search the marker with the correct house index
    for (i = 0; i< window.markers.length; i++) {
      var house_id = $(this).parentsUntil("[data-house-id]").parent().attr("data-house-id")
      if ( window.markers[i].index == house_id ) {
        window.markers[i].closePopup();
        break;
      }
    }
  }

  // hover on location marker pops up the map popup
  $(".location_marker").on('mouseenter', onArticleMouseEnter);
  $(".location_marker").on('mouseleave', onArticleMouseLeave);
})

var defaultZoom = 17;

// add markers and popups
var icon_red = L.icon({iconUrl: '<%= asset_path "marker-icon-red.png" %>', iconAnchor: [12, 39]})
var icon_blue = L.icon({iconUrl: '<%= asset_path "marker-icon-blue.png" %>', iconAnchor: [12, 39]})

add_markers_to_map = function(marker_defs, map, markers_layer) {
  window.markers = [];
  markers = window.markers;
  for (i=0; i<marker_defs.length; i++) {
    var icon;
    if ( marker_defs[i].color == 'red' ) { icon = icon_red; }
    else { icon = icon_blue; } //( marker_defs[i].color == 'blue' )
    var marker = L.marker(marker_defs[i].coords, { icon: icon }).addTo(markers_layer);
    marker.bindPopup(marker_defs[i].html);
    marker.index = marker_defs[i].id;
    markers.push(marker);
    //marker.on('click', onMarkerClick);
    
  }
}

drawmap_leaflet = function(mapid, marker_defs, marker_def_center, bounds, onMapClick, onMapDblClick, zoom) {
  // parameter defaults
  onMapClick = onMapClick || null;
  onMapDblClick = onMapDblClick || null;
  zoom = zoom || defaultZoom;

  window.map = L.map(mapid);
  var map = window.map;
  
  if ( bounds.length == 1 )
    map.setView(bounds[0], zoom);
  else
    map.fitBounds(bounds);

  // create the tile layer with correct attribution
  var osmUrl='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
  var osmAttrib='Map data Â© <a href="http://openstreetmap.org">OpenStreetMap</a> contributors';
  var osm = new L.TileLayer(osmUrl, { attribution: osmAttrib} );
  osm.addTo(map);

  // add scale
  L.control.scale().addTo(map);

  // markers (but not center)
  window.markers_layer = new L.FeatureGroup();
  map.addLayer(markers_layer)
  add_markers_to_map(marker_defs, map, window.markers_layer)

  // center marker
  center_marker_layer = new L.FeatureGroup();
  map.addLayer(center_marker_layer)
  add_markers_to_map([marker_def_center], map, center_marker_layer)
  
  return map;
}

